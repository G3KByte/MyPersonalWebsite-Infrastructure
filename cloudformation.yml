AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ProjectSource:
    Type: String
    Description: "Source control URL (e.g. Github)"
  GithubOwner:
    Type: String
    Description: "Owner of repository"
  GithubRepo:
    Type: String
    Description: "Name of repository"
  GithubOAuthToken:
    Type: String
    Description: "Github personal access token"
  DistributionCName:
    Type: CommaDelimitedList
  CertificateARN:
    Type: String
    Description: "ARN in ACM for alternate name SSL certificate"
  Stage:
    Default: alpha
    Type : String
    AllowedValues:
      - alpha
      - beta
      - gamma
      - prod
    ConstraintDescription: Must specify valid value [alpha, beta, gamma, prod]


Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - "*"
#                  - !GetAtt WebsiteBucket.Arn
#                  - !Join ['', [!GetAtt WebsiteBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                  - "ssm:GetParameters"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ssm:GetParameters"
                Resource:
                  - "*"
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        Name: MyProject
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:4.0"
      Source:
        Type: CODEPIPELINE
        BuildSpec: "configuration/build_spec.yml"

  WebsiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html

  WebsiteDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases: !Ref DistributionCName
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !Ref CertificateARN
        Origins:
          - # Use the WebsiteBucket as the CDN origin
            DomainName: !GetAtt WebsiteBucket.DomainName
            Id: !Ref WebsiteBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        # Configure the caching behavior for our CDN
        DefaultCacheBehavior:
          MinTTL: 86400  # 1 day
          MaxTTL: 31536000  # 1 year
          ForwardedValues:
            QueryString: true
          TargetOriginId: !Ref WebsiteBucket
          ViewerProtocolPolicy: "redirect-to-https"   # we want to force HTTPS

  WebsiteBucketParam:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join ['-', [!Ref "AWS::StackName", "WebsiteBucketName"]]
      Type: String
      Value: !Ref WebsiteBucket
      Description: SSM parameter for id of website bucket
  WebsiteDistributionParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['-', [!Ref "AWS::StackName", "WebsiteDistributionName"]]
      Type: String
      Value: !Ref WebsiteDistribution
      Description: SSM parameter for id of Cloudfront distribution
